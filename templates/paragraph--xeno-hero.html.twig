{#
/**
 * @file
 * Default theme implementation to display the Xeno Hero Paragraphs bundle.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   - id: The paragraph ID.
 *   - bundle: The type of the paragraph, for example, "image" or "text".
 *   - authorid: The user ID of the paragraph author.
 *   - createdtime: Formatted creation date. Preprocess functions can
 *     reformat it by calling format_date() with the desired parameters on
 *     $variables['paragraph']->getCreatedTime().
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * Fields:
 * - xeno_background_image: Image field
 * - xeno_content: Paragraphs field
 * - xeno_invert: A select list with one option.
 * - xeno_overlay A select list with multiple options.
 * - xeno_parallax A select list with one option.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}

{{ attach_library('xeno_hero/xeno-hero') }}

{# The template default set classes. #}
{%
set classes = [
'paragraph',
'paragraph--type--' ~ paragraph.bundle|clean_class,
view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
]
%}

{# Renders Overlay field. #}
{# Sets data attibute value from values in database. #}
{% if content.xeno_overlay|render %}
  {% set overlay_level = content.xeno_overlay['#items'].getString() %}
  {% set overlay_levels = [
    '1' == overlay_level ? '1',
    '2' == overlay_level ? '2',
    '3' == overlay_level ? '3',
    '4' == overlay_level ? '4',
    '5' == overlay_level ? '5',
    '6' == overlay_level ? '6',
    '7' == overlay_level ? '7',
    '8' == overlay_level ? '8',
    '9' == overlay_level ? '9',
  ]
  %}
{% endif %}

{# Renders Parallax field. #}
{# Sets data attibute value from values in database. #}
{% if content.xeno_parallax|render %}
  {% set parallax_speed = content.xeno_parallax['#items'].getString() %}
  {% set parallax_speeds = [
    '1' == parallax_speed ? '1',
    '2' == parallax_speed ? '2',
    '3' == parallax_speed ? '3',
    '4' == parallax_speed ? '4',
    '5' == parallax_speed ? '5',
    '6' == parallax_speed ? '6',
  ]
  %}
{% endif %}

{# Renders Parallax Offset field. #}
{# Sets data attibute value from user input. #}
{% if content.xeno_offset|render %}
  {% set parallax_offset = content.xeno_offset['#items'].getString() %}
{% endif %}

{# Renders Invert field. #}
{# Sets class from values in database. #}
{% if content.xeno_invert|render %}
  {% set invert_level = content.xeno_invert['#items'].getString() %}
  {% set invert_levels = [
    'invert' == invert_level ? 'paragraph--overlay--invert',
  ]
  %}
{% endif %}

{# Merges Invert field with classes. #}
{% set invert_field = content.xeno_invert|render %}
{% if invert_field %}
  {% set classes = classes|merge(invert_levels) %}
{% endif %}

{# Renders Zoom field. #}
{# Sets class from values in database. #}
{% if content.xeno_zoom|render %}
  {% set zoom_level = content.xeno_zoom['#items'].getString() %}
  {% set zoom_levels = [
    '1' == zoom_level ? 'paragraph--zoom paragraph--zoom--1',
    '2' == zoom_level ? 'paragraph--zoom paragraph--zoom--2',
    '3' == zoom_level ? 'paragraph--zoom paragraph--zoom--3',
    '4' == zoom_level ? 'paragraph--zoom paragraph--zoom--4',
    '5' == zoom_level ? 'paragraph--zoom paragraph--zoom--5',
    '6' == zoom_level ? 'paragraph--zoom paragraph--zoom--6',
    ]
  %}
 {% endif %}

{# Merges Zoom field with classes. #}
{% set zoom_field = content.xeno_zoom|render %}
{% if zoom_field %}
  {% set classes = classes|merge(zoom_levels) %}
{% endif %}

{# Prints div with classes, & content w/o img/invert/overlay/parallax fields. #}
<div id="xeno-hero--{{ paragraph.id() }}" {{ attributes.addClass(classes).setAttribute('data-overlay', overlay_levels).setAttribute('data-speed', parallax_speeds).setAttribute('data-offset', parallax_offset) }}>
  {% if content.xeno_background_image|render %}
    <div class="paragraph--type--xeno-hero__image">
      {{ content.xeno_background_image }}
    </div>
  {% endif %}
  {{ content|without('xeno_background_image', 'xeno_invert', 'xeno_offset', 'xeno_overlay', 'xeno_parallax') }}
</div>
